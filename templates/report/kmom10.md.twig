Kmom07-10 - Projekt
-------------------------

<h3>Krav 1-3 - Webbplats</h3>
Det här projektet handlar om att bygga en webbplats som använder en databas via ORM (Object Relational Mapping). Jag valde ett eget fokus som handlade om att visualisera vädret under de senaste 20 åren i tre svenska städer. Här hittade jag statistik och mätvärden på SMHI:s hemsida och jag sparade dessa mätvärden i min databas, och läste sedan in dem i min kod, med hjälp av ORM. För att visualisera mätdatan använde jag Chart.js som enkelt gör snygga diagram av mätdatan som man kan placera i sina vyer. Det var kul att lära sig att göra diagrammen, för det blev snyggt och känns som en användbar sak att kunna. Utöver att implementera projektet skulle man förändra utseendet på webbplatsen jämfört med kurssidan, man skulle fokusera på användbarhet, se över kodkvaliteten och att koden passerar utan anmärkningar genom phpcs för kodstil samt phpmd och phpstan för linters. Koden skulle även använda doc-block-kommentarer så att dokumentation kunde skapas med phpdoc, koden skulle vara ett Git repo och koden skulle enhetstestas och kvaliteten skulle undersökas med phpMetric samt Scrutinizer. Jag använde den mesta tiden till att visualisera datan och ändra designen på sidan.

<h3>Krav 4 - Snygg kod (optionellt)</h3>
Det här kravet handlade om att skriva en artikel om vad som är snygg kod. Det här har vi redan varit inne på under kursen så det var egentligen bara att fundera vidare på det vi pratat om, och sammanfatta i en text. När man måste formulera sig så krävs att man sammanfattar för sig själv olika delar som finns när det gäller kodkvalitet, så att behöva skriva om det gör att det fastnar bättre. Här tog jag främst upp de fyra C:na Cohesion, Coupling, Complexity och Coverage, och hur arbetet med dessa delar kan påverka kodkvaliteten, och varför det är bra.

<h3>Krav 5 - Inloggning (optionellt)</h3>
Det här kravet fanns även med som ett optionellt krav i ett tidigare kursmoment, och eftersom jag gjort delar av det då var det inte jättemycket nytt, men det tar ändå lite tid och krångel innan man fått alla delar på plats. Det gällde att få en del formulär på plats och plocka ut rätt data från de olika fälten. Det som var lite klurigt var att användarna doe och admin skulle se olika saker efter att de loggat in. Att omdirigera dem till olika platser var lätt, men jag ville visa nästan samma sak, men ta bort vissa knappar och liknande för admin-användaren, och det hade jag lite problem med att få att fungera. Jag hade kunnat göra det på ett enklare sätt, men ville att det skulle fungera på det sätt jag hade tänkt ut att jag ville ha det, för enklast hantering för användarna.

<h3>Krav 6 - ORM (optionellt)</h3>
Det här kravet krävde att man i sin databas hade minst två tabeller som behövde joinas, och man skulle göra det med hjälp av ORM. Jag hade tabellerna weather samt city i min databas. Weather innehöll mätvärdena för en stad och city statisk information om den staden. Jag joinade tabellerna med Symfony/ Doctrine genom att relatera väder- och stadsobjekt till varandra. På så sätt kunde jag sedan från vädertabellen få fram stadens namn genom väderobjektet <code>$weather->getCity()->getName()</code>.

Allmänt så hade jag lite problem att komma igång med projektet. Dels tycker jag det var svårt att välja inriktning. De två första förslagen verkade för svåra och det sista hade jag svårt att hitta mätdata för, så det slutade med att jag valde en egen inriktning. Jag tycker det var svårt att hitta ett projekt som skulle innebära att det sjätte optionella kravet gick att utföra. Det är lättare att bygga på med ett ytterligare krav när man kommit en bit på vägen, men i detta fall skulle risken vara att behöva göra om allt om man haft fel upplägg från början, och därför tog det mer tid att fundera ut upplägget innan, vilket för mig är mycket svårare. Många bitar brukar annars lossna när jag kommit en bit, och jag brukar arbeta med de obligatoriska delarna först för att sedan bygga på med optionella krav. Den här gången blev det tvärt om - jag gjorde två optionella krav innan jag kom igång med de obligatoriska. Programmeringsmässigt var mitt projekt inte så svårt att utföra, men det tog ändå lång tid i och med att det var svårt att komma igång ordentligt. Jag hade också strul med att få mina diagram att visas. Det var något vi inte gjort tidigare, så jag visste inte om felet berodde på något jag gjort eller om jag installerat något fel. Jag hade också mycket krångel på slutet av kursen när jag i princip var klar med allt, men ändå inte fick publiceringen på studentservern att fungera t ex. Jag tycker det här projektet mest innehöll nya grejer och att fokuset inte låg på det vi gjort under kursen. Chart.js och att joina tabeller med ORM är inte något vi arbetat med i kursen och för mig blir det konstigt att ha det som examination, när det blev största delen av vad min tid lades på, och jag dessutom hade mycket problem pga det. En annan sak med projektet som gör att det tog tid för mig var också att det innehöll många smågrejer som att ta fram dokumentation med phpdocs, analysera kvaliteten med phpMetrics mm, men dessa bitar var sånt vi gjort tidigare under kursen. Även om varje grej inte är väldigt krävande tar det lång tid att få med allt. Fördelen med projektet var att det var ganska fritt, och man fick jobba med många bitar som vi hållit på med tidigare. Bland annat satt jag lite extra med designen.

Kursen som helhet tycker jag har varit okej. Jag har haft lite svårt att komma igång med de olika kursmomenten och det känns som att den varit lite spretig och tagit upp många olika saker, så jag vet inte riktigt hur jag ska sammanfatta den. Eftersom den har handlat om många olika saker har det varit svårt att få grepp om vad man egentligen sysslar med, eftersom det går så snabbt fram med de olika delarna. Materialet och handledningen har varit okej. Jag har skrivit ett antal frågor i chatten som jag inte fått svar på, och rättningen av kursmomenten har legat lite efter. Sedan tycker jag projektet inte var optimalt för kursen. I stället för att fördjupa kunskaperna från veckorna innan satt jag mest med nya grejer och förstod inte varför de inte fungerade. Jag ger kursen 4/10 p.